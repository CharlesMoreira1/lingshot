name: Build CI

on:
  pull_request:
    branches:
      - master
env:
  CHAT_GPT_KEY_RELEASE: ${{ secrets.CHAT_GPT_KEY_RELEASE }}
  CHAT_GPT_KEY_DEBUG: ${{ secrets.CHAT_GPT_KEY_DEBUG }}
  GOOGLE_AUTH_ID: ${{ secrets.GOOGLE_AUTH_ID }}
  ADMOB_APP_ID_RELEASE: ${{ secrets.ADMOB_APP_ID_RELEASE }}
  ADMOB_APP_ID_DEBUG: ${{ secrets.ADMOB_APP_ID_DEBUG }}
  ADMOB_INTERSTITIAL_ID_RELEASE: ${{ secrets.ADMOB_INTERSTITIAL_ID_RELEASE }}
  ADMOB_INTERSTITIAL_ID_DEBUG: ${{ secrets.ADMOB_INTERSTITIAL_ID_DEBUG }}
  FIREBASE_GOOGLE_SERVICES: ${{ secrets.FIREBASE_GOOGLE_SERVICES }}
  SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
  SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
  SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - name: Setup checkout
        uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          chmod +x .github/set-key.sh
          .github/set-key.sh
        shell: bash

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Build the app
        run: ./gradlew clean build

  testSnapshot:
    runs-on: ubuntu-latest

    steps:
      - name: Setup checkout
        uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          chmod +x .github/set-key.sh
          .github/set-key.sh
        shell: bash

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Verify paparazzi snapshot
        run: ./gradlew verifyPaparazziDebug

  quality:
    runs-on: ubuntu-latest

    steps:
      - name: Setup checkout
        uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          chmod +x .github/set-key.sh
          .github/set-key.sh
        shell: bash

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 17

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Check code formatting
        run: ./gradlew ktlintCheck

      - name: Upload code formatting
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Artifact ktlint
          path: '**/reports/ktlint/ktlintMainSourceSetCheck/'

      - name: Check code smells
        if: always()
        run: ./gradlew detekt

      - name: Upload code smells
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Artifact detekt
          path: '**/reports/detekt/'

  compress-image:
    name: calibreapp/image-actions
    runs-on: ubuntu-latest

    needs: [testSnapshot]
    steps:
      - name: Setup checkout
        uses: actions/checkout@v3

      - name: Compress Images
        uses: calibreapp/image-actions@main
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          jpegQuality: "80"
          pngQuality: "80"
          webpQuality: "80"
          ignorePaths: "node_modules/**, **/snapshots/**"

  danger:
    runs-on: ubuntu-latest

    if: always()
    needs: [quality]
    steps:
      - name: Setup checkout
        uses: actions/checkout@v3

      - name: Setup ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 3.0
          bundler-cache: true

      - name: Download code formatting
        uses: actions/download-artifact@v3
        with:
          name: Artifact ktlint
          path: '**/reports/ktlint/ktlintMainSourceSetCheck/'

      - name: Download code smells
        uses: actions/download-artifact@v3
        with:
          name: Artifact detekt
          path: '**/reports/detekt/'

      - name: Install bundler gems
        run: gem install bundler

      - name: Cache gems
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('Gemfile') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Setup danger
        uses: MeilCli/danger-action@v5
        with:
          plugins_file: 'Gemfile'
          install_path: 'vendor/bundle'
          danger_file: 'Dangerfile'
          danger_id: 'danger-ci'
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
