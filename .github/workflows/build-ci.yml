name: Build CI

on:
  pull_request:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Setup checkout
        uses: actions/checkout@v3

      - name: Set environment variables
        run: |
          echo "CHAT_GPT_KEY_RELEASE=\"$CHAT_GPT_KEY_RELEASE\"" >> ./local.properties
          echo "CHAT_GPT_KEY_DEBUG=\"$CHAT_GPT_KEY_DEBUG\"" >> ./local.properties
          echo "GOOGLE_AUTH_ID=\"$GOOGLE_AUTH_ID\"" >> ./local.properties
          echo "ADMOB_APP_ID_RELEASE=\"$ADMOB_APP_ID_RELEASE\"" >> ./local.properties
          echo "ADMOB_APP_ID_DEBUG=\"$ADMOB_APP_ID_DEBUG\"" >> ./local.properties
          echo "ADMOB_INTERSTITIAL_ID_RELEASE=\"$ADMOB_INTERSTITIAL_ID_RELEASE\"" >> ./local.properties
          echo "ADMOB_INTERSTITIAL_ID_DEBUG=\"$ADMOB_INTERSTITIAL_ID_DEBUG\"" >> ./local.properties
        env:
          CHAT_GPT_KEY_RELEASE: ${{ secrets.CHAT_GPT_KEY_RELEASE }}
          CHAT_GPT_KEY_DEBUG: ${{ secrets.CHAT_GPT_KEY_DEBUG }}
          GOOGLE_AUTH_ID: ${{ secrets.GOOGLE_AUTH_ID }}
          ADMOB_APP_ID_RELEASE: ${{ secrets.ADMOB_APP_ID_RELEASE }}
          ADMOB_APP_ID_DEBUG: ${{ secrets.ADMOB_APP_ID_DEBUG }}
          ADMOB_INTERSTITIAL_ID_RELEASE: ${{ secrets.ADMOB_INTERSTITIAL_ID_RELEASE }}
          ADMOB_INTERSTITIAL_ID_DEBUG: ${{ secrets.ADMOB_INTERSTITIAL_ID_DEBUG }}

      - name: Build the app
        run: ./gradlew clean build

  quality:
    runs-on: ubuntu-latest

    steps:
      - name: Setup checkout
        uses: actions/checkout@v3

      - name: Check code formatting
        run: ./gradlew ktlintCheck

      - name: Upload code formatting
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Artifact ktlint
          path: '**/reports/ktlint/ktlintMainSourceSetCheck/'

      - name: Check code smells
        if: always()
        run: ./gradlew detekt

      - name: Upload code smells
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Artifact detekt
          path: '**/reports/detekt/'

  danger:
    runs-on: ubuntu-latest

    if: always()
    needs: [quality]
    steps:
      - name: Setup checkout
        uses: actions/checkout@v3

      - name: Setup ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 3.0
          bundler-cache: true

      - name: Download code formatting
        uses: actions/download-artifact@v3
        with:
          name: Artifact ktlint
          path: '**/reports/ktlint/ktlintMainSourceSetCheck/'

      - name: Download code smells
        uses: actions/download-artifact@v3
        with:
          name: Artifact detekt
          path: '**/reports/detekt/'

      - name: Install bundler gems
        run: gem install bundler

      - name: Cache gems
        uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('Gemfile') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - name: Setup danger
        uses: MeilCli/danger-action@v5
        with:
          plugins_file: 'Gemfile'
          install_path: 'vendor/bundle'
          danger_file: 'Dangerfile'
          danger_id: 'danger-ci'
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
